#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    behaviors {
        // Behaviors for dvorak layout, qwerty keyboard shortcuts
        SQT_Q: SINGLE_QUOTE_Q {
            compatible = "zmk,behavior-mod-morph";
            label = "SINGLE_QUOTE_Q";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp Q>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        COMMA_W: COMMA_W {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_W";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp W>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        DOT_E: PERIOD_E {
            compatible = "zmk,behavior-mod-morph";
            label = "PERIOD_E";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp E>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        P_R: P_R {
            compatible = "zmk,behavior-mod-morph";
            label = "P_R";
            #binding-cells = <0>;
            bindings = <&kp P>, <&kp R>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        Y_T: Y_T {
            compatible = "zmk,behavior-mod-morph";
            label = "Y_T";
            #binding-cells = <0>;
            bindings = <&kp Y>, <&kp T>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        F_Y: F_Y {
            compatible = "zmk,behavior-mod-morph";
            label = "F_Y";
            #binding-cells = <0>;
            bindings = <&kp F>, <&kp Y>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        G_U: G_U {
            compatible = "zmk,behavior-mod-morph";
            label = "G_U";
            #binding-cells = <0>;
            bindings = <&kp G>, <&kp U>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        C_I: C_I {
            compatible = "zmk,behavior-mod-morph";
            label = "C_I";
            #binding-cells = <0>;
            bindings = <&kp C>, <&kp I>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        R_O: R_O {
            compatible = "zmk,behavior-mod-morph";
            label = "R_O";
            #binding-cells = <0>;
            bindings = <&kp R>, <&kp O>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        L_P: L_P {
            compatible = "zmk,behavior-mod-morph";
            label = "L_P";
            #binding-cells = <0>;
            bindings = <&kp L>, <&kp P>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        O_S: O_S {
            compatible = "zmk,behavior-mod-morph";
            label = "O_S";
            #binding-cells = <0>;
            bindings = <&kp O>, <&kp S>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        E_D: E_D {
            compatible = "zmk,behavior-mod-morph";
            label = "E_D";
            #binding-cells = <0>;
            bindings = <&kp E>, <&kp D>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        U_F: U_F {
            compatible = "zmk,behavior-mod-morph";
            label = "U_F";
            #binding-cells = <0>;
            bindings = <&kp U>, <&kp F>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        I_G: I_G {
            compatible = "zmk,behavior-mod-morph";
            label = "I_G";
            #binding-cells = <0>;
            bindings = <&kp I>, <&kp G>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        D_H: D_H {
            compatible = "zmk,behavior-mod-morph";
            label = "D_H";
            #binding-cells = <0>;
            bindings = <&kp D>, <&kp H>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        H_J: H_J {
            compatible = "zmk,behavior-mod-morph";
            label = "H_J";
            #binding-cells = <0>;
            bindings = <&kp H>, <&kp J>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        T_K: T_K {
            compatible = "zmk,behavior-mod-morph";
            label = "T_K";
            #binding-cells = <0>;
            bindings = <&kp T>, <&kp K>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        N_L: N_L {
            compatible = "zmk,behavior-mod-morph";
            label = "N_L";
            #binding-cells = <0>;
            bindings = <&kp N>, <&kp L>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        S_SEMI: S_SEMICOLON {
            compatible = "zmk,behavior-mod-morph";
            label = "S_SEMICOLON";
            #binding-cells = <0>;
            bindings = <&kp S>, <&kp SEMICOLON>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        SEMI_Z: SEMICOLON_Z {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMICOLON_Z";
            #binding-cells = <0>;
            bindings = <&kp SEMICOLON>, <&kp Z>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        Q_X: Q_X {
            compatible = "zmk,behavior-mod-morph";
            label = "Q_X";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp X>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        J_C: J_C {
            compatible = "zmk,behavior-mod-morph";
            label = "J_C";
            #binding-cells = <0>;
            bindings = <&kp J>, <&kp C>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        K_V: K_V {
            compatible = "zmk,behavior-mod-morph";
            label = "K_V";
            #binding-cells = <0>;
            bindings = <&kp K>, <&kp V>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        X_B: X_B {
            compatible = "zmk,behavior-mod-morph";
            label = "X_B";
            #binding-cells = <0>;
            bindings = <&kp X>, <&kp B>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        B_N: B_N {
            compatible = "zmk,behavior-mod-morph";
            label = "B_N";
            #binding-cells = <0>;
            bindings = <&kp B>, <&kp N>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        W_COMMA: W_COMMA {
            compatible = "zmk,behavior-mod-morph";
            label = "W_COMMA";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp COMMA>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        V_DOT: V_PERIOD {
            compatible = "zmk,behavior-mod-morph";
            label = "V_PERIOD";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp PERIOD>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
        Z_SLASH: Z_SLASH {
            compatible = "zmk,behavior-mod-morph";
            label = "Z_SLASH";
            #binding-cells = <0>;
            bindings = <&kp Z>, <&kp SLASH>;
            mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
        };
    };
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
// ┌────────┬────────┬────────┬────────┬────────┬────────┐                   ┌────────┬────────┬────────┬────────┬────────┬────────┐
    &kp ESC   &kp N1  &kp N2   &kp N3   &kp N4   &kp N5                       &kp N6   &kp N7   &kp N8    &kp N9  &kp N0   &kp GRAVE
// ├────────┼────────┼────────┼────────┼────────┼────────┤                   ├────────┼────────┼────────┼────────┼────────┼────────┤
    &kp TAB   &kp Q   &kp W    &kp E    &kp R    &kp T                        &kp Y    &kp U    &kp I     &kp O   &kp P    &kp MINUS
// ├────────┼────────┼────────┼────────┼────────┼────────┤                   ├────────┼────────┼────────┼────────┼────────┼────────┤
    &kp LCTRL &kp A   &kp S    &kp D    &kp F    &kp G                        &kp H    &kp J    &kp K     &kp L   &kp SEMI &kp SQT
// ├────────┼────────┼────────┼────────┼────────┼────────┼────────┐ ┌────────┼────────┼────────┼────────┼────────┼────────┼────────┤
    &kp LSHFT &kp Z   &kp X    &kp C    &kp V    &kp B    &kp LBKT   &kp RBKT &kp N    &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT
// └────────┴────────┴────────┼────────┼────────┼────────┼────────┤ ├────────┼────────┼────────┼────────┼────────┴────────┴────────┘
                               &kp LALT &kp LGUI &mo 1    &kp SPACE  &kp RET  &mo 2    &kp BSPC &kp RGUI
                           // └────────┴────────┴────────┴────────┘ └────────┴────────┴────────┴────────┘
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                 &trans    &trans    &trans          &trans    &trans    &trans
&kp F1     &kp F2           &kp F3            &kp F4            &kp F5       &kp F6                       &kp F7    &kp F8    &kp F9          &kp F10   &kp F11   &kp F12
&kp GRAVE  &kp EXCL         &kp AT            &kp HASH          &kp DOLLAR   &kp PRCNT                    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp TILDE
&trans     &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans       &trans    &trans   &trans    &trans    &kp MINUS &kp KP_PLUS     &kp LBRC  &kp RBRC  &kp PIPE
                                              &trans            &trans       &trans    &trans   &trans    &trans    &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
&kp GRAVE &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &kp N6      &kp N7    &kp N8    &kp N9   &kp N0    &trans
&kp F1    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &trans      &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &trans
&kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &trans   &trans    &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &kp BSLH
                        &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
	};
};
